<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOGS_ABSOLUTE_PATH" value="./logs" />

    // apender : log의 형태 및 어디에 출력할지 설정하기 위한 영역
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{36} - %msg%n</Pattern>
        </layout>
    </appender>

    // Console, File, SMTP(메일), DB 등 다양한 appender가 있지만 실무에선 RollingFile(여러 개의 파일을 순회하며 로그 저장)을 가장 많이 사용
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        // file : log를 저장할 파일의 위치
        <file>${LOGS_ABSOLUTE_PATH}/logback.log</file>
        // encoder : pattern을 사용하여 원하는 형식으로 로그 출력
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        // rollingProlicy : RollingFileAppender 사용시, 로그와 관련한 정책을 설정
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            // fileNamePattern : 압축 형식 지정
            <fileNamePattern>${LOGS_ABSOLUTE_PATH}/logback.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            // maxHistory : 로그 저장 기간
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    // 모든 폴더에서 info 로그가 발생하면 콘솔에 띄움(전역 설정), debug를 띄우려면 info를 debug로
    <root level="INFO">
        <appender-ref ref="STDOUT" />
    </root>

    // 아래 경로에 폴더에서 warn 로그가 뜨면 파일 생성(지역 설정)
    <logger name="com.cos.aop.config" level="WARN">
        <appender-ref ref="FILE" />
    </logger>

</configuration>